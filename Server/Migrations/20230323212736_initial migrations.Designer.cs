// <auto-generated />
using System;
using AmberWeatherDashboard.Server.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AmberWeatherDashboard.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230323212736_initial migrations")]
    partial class initialmigrations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.15");

            modelBuilder.Entity("AmberWeatherDashboard.Server.Database.Entities.WeatherData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<double>("Humidity")
                        .HasColumnType("REAL");

                    b.Property<double>("Pressure")
                        .HasColumnType("REAL");

                    b.Property<double>("Rainfall")
                        .HasColumnType("REAL");

                    b.Property<double>("Temperature")
                        .HasColumnType("REAL");

                    b.Property<string>("WindDirection")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("WindSpeed")
                        .HasColumnType("REAL");

                    b.Property<double>("Windgusts")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("WeatherHistoricalData");
                });
#pragma warning restore 612, 618
        }
    }
}
